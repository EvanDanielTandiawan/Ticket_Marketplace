/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FormUI;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Locale;
import javax.swing.table.DefaultTableModel;
import tmwebservice.Event;
import tmwebservice.Seller;
import tmwebservice.Ticket;

/**
 *
 * @author joshu
 */
public class FormRecapPenjualan extends javax.swing.JFrame {

    /**
     * Creates new form FormRecapPenjualan
     */
    Event eventSelected;
    List<Ticket> listOfTicket;
    Seller curentUser;
    public FormRecapPenjualan(Event eventSelected, Seller currentUser) {
        initComponents();
        this.eventSelected = eventSelected;
        this.curentUser= currentUser;
        System.out.println(currentUser.getUsername());
        this.listOfTicket= getSellerTicket(currentUser.getUsername());
        System.out.println("jml tiket : "+listOfTicket.size());
                System.out.println("id tiket : "+listOfTicket.get(0).getId());

        DefaultTableModel model = (DefaultTableModel) jTableTicket.getModel();
        model.setRowCount(0);

        for (Ticket t : listOfTicket) {
            t = getTicketById(t.getId());
            System.out.println("tanggal eventnya == " +t.getEvent().getStartTime());
            String startTimeFormatted = formatTanggal(t.getEvent().getStartTime());
            System.out.println("Ticket ID to table: "+ t.getId());
            System.out.println("Ticket event to table: "+ t.getEvent().getName());
            System.out.println("Ticket EventClass to table: "+ t.getEventClass());
            System.out.println("Ticket ID to table: "+ t.getEvent().getStartTime());
            System.out.println("Ticket ID to table: "+ t.isIsClaimed());
            Object[] row = new Object[] {
                t.getEvent().getName(),
                t.getEventClass(),
                startTimeFormatted,
                t.getStatus(),
                t.isIsClaimed() ? "Sudah" : "Belum",
                t.getPrice()
            };
            model.addRow(row);
        }
    }
    
    private String formatTanggal(String rawDateTime) {
        try {
            DateTimeFormatter inputFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd-HH-mm");
            LocalDateTime dateTime = LocalDateTime.parse(rawDateTime, inputFormatter);

            DateTimeFormatter outputFormatter = DateTimeFormatter.ofPattern("EEEE, dd MMMM yyyy - HH:mm", new Locale("id", "ID"));
            return dateTime.format(outputFormatter);
        } catch (Exception e) {
            return rawDateTime; 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTableTicket = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuHome = new javax.swing.JMenu();
        menuPublishTicket = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        menuProfile = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableTicket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Event", "Kelas", "Tanggal Event", "Status Pembayaran", "Klaim", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableTicket);

        jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        menuHome.setText("Home");
        jMenuBar1.add(menuHome);

        menuPublishTicket.setText("Publish Ticket");
        menuPublishTicket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuPublishTicketMouseClicked(evt);
            }
        });
        menuPublishTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPublishTicketActionPerformed(evt);
            }
        });
        jMenuBar1.add(menuPublishTicket);

        jMenu4.setText("List of Ticket");
        jMenu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu4ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        menuProfile.setText("Profile");
        menuProfile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuProfileMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                menuProfileMousePressed(evt);
            }
        });
        menuProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuProfileActionPerformed(evt);
            }
        });
        jMenuBar1.add(menuProfile);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(212, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addGap(81, 81, 81))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuPublishTicketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuPublishTicketMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_menuPublishTicketMouseClicked

    private void menuPublishTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPublishTicketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuPublishTicketActionPerformed

    private void jMenu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu4ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jMenu4ActionPerformed

    private void menuProfileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuProfileMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_menuProfileMouseClicked

    private void menuProfileMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuProfileMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuProfileMousePressed

    private void menuProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuProfileActionPerformed
      
    }//GEN-LAST:event_menuProfileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormRecapPenjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormRecapPenjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormRecapPenjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormRecapPenjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FormRecapPenjualan().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableTicket;
    private javax.swing.JMenu menuHome;
    private javax.swing.JMenu menuProfile;
    private javax.swing.JMenu menuPublishTicket;
    // End of variables declaration//GEN-END:variables

    private static java.util.List<tmwebservice.Ticket> getSellerTicket(java.lang.String seller) {
        tmwebservice.TMWebService_Service service = new tmwebservice.TMWebService_Service();
        tmwebservice.TMWebService port = service.getTMWebServicePort();
        return port.getSellerTicket(seller);
    }

    private static Ticket getTicketById(java.lang.String ticketId) {
        tmwebservice.TMWebService_Service service = new tmwebservice.TMWebService_Service();
        tmwebservice.TMWebService port = service.getTMWebServicePort();
        return port.getTicketById(ticketId);
    }
}
